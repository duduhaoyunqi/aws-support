您好，

我是 AWS 技术支持工程师 Harry，很高兴能协助您。

我理解您的问题如下，若是有所误解还请您告诉我。

#### 问题

    稍早透过网上会议我理解到您想要使用EventBridge来监控EBS的修改状态，同时想要针对如IOPS等细部异动来做细分。

#### 说明

    稍早在网上会议的过程中，我们讨论到在EBS卷无论修改什么选项都是调用到相同的API ModifyVolume，因此我们需要去比对该事件中的资讯，才能够确认到调用ModifyVolume API具体是修改EBS卷的类型、大小、IOPS和性能哪一个项目，然而在EventBridge的事件过滤器，较难检查事件资讯中的值是否有所不同，因此我们较难直接透过过滤事件的json来确认修该的讯息，但是我透过以下方式配置EventBridge规则，搭配Lambda来确认EBS的修改细节。

    以下是我的测试结果供您参考
    创建一个EventBridge规则使用以下事件模式
    事件模式
    {
	  "source": ["aws.ec2"],
	  "detail-type": ["AWS API Call via CloudTrail"],
	  "detail": {
	    "eventSource": ["ec2.amazonaws.com"],
	    "eventName": ["ModifyVolume"]
	  }
	}

	并且在目标选择Lambda 函数

	以下为Lambda 函数内容，供您参考，以下函数内容会检查ModifyVolume事件中的IOPS是否有进行修改，若有修改则透过SNS进行通知。
	--------
	import json
	import boto3

	sns_client = boto3.client('sns')
	sns_topic_arn = '这里输入您的SNS ARN'

	def lambda_handler(event, context):

	    detail = event.get('detail', {})
	    request_parameters = detail.get('requestParameters', {}).get('ModifyVolumeRequest', {})
	    new_iops = request_parameters.get('Iops')


	    response_elements = detail.get('responseElements', {}).get('ModifyVolumeResponse', {})
	    volume_modification = response_elements.get('volumeModification', {})

	    old_iops = volume_modification.get('originalIops')


	    if new_iops is not None and old_iops is not None and new_iops != old_iops:
	        message = f"EBS volume IOPS has been modified. Old IOPS: {old_iops}, New IOPS: {new_iops}"
	        sns_client.publish(
	            TopicArn=sns_topic_arn,
	            Message=message,
	            Subject='EBS Volume IOPS Modification Notification'
	        )
	        return {
	            'statusCode': 200,
	            'body': json.dumps('Notification sent!')
	        }

	    return {
	        'statusCode': 200,
	        'body': json.dumps('No IOPS modification detected or IOPS values missing.')
	    }

	---------
	以外，若您需要发送SNS通知，请确保Lambda 函数角色拥有SNS Publish权限，具体权限策略如下，
	{
		"Version": "2012-10-17",
		"Statement": [
			{
				"Effect": "Allow",
				"Action": [
					"sns:Publish"
				],
				"Resource": "这里输入您的SNS ARN"
			}
		]
	}


#######################################################################################################################
ModifyVolume Event record

{
    "eventVersion": "1.09",
    "userIdentity": {
        "type": "AssumedRole",
        "principalId": "AROAV4ZOWCJJLOYVIZKWX:ACMKVD015@maersk.com",
        "arn": "arn:aws:sts::405435454034:assumed-role/AWSReservedSSO_MaerskOCFMPAdmin_29566c2303573c2a/ACMKVD015@maersk.com",
        "accountId": "405435454034",
        "accessKeyId": "ASIAV4ZOWCJJNKQ34M7G",
        "sessionContext": {
            "sessionIssuer": {
                "type": "Role",
                "principalId": "AROAV4ZOWCJJLOYVIZKWX",
                "arn": "arn:aws:iam::405435454034:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_MaerskOCFMPAdmin_29566c2303573c2a",
                "accountId": "405435454034",
                "userName": "AWSReservedSSO_MaerskOCFMPAdmin_29566c2303573c2a"
            },
            "attributes": {
                "creationDate": "2024-05-16T02:38:26Z",
                "mfaAuthenticated": "false"
            }
        }
    },
    "eventTime": "2024-05-16T02:48:28Z",
    "eventSource": "ec2.amazonaws.com",
    "eventName": "ModifyVolume",
    "awsRegion": "ap-southeast-1",
    "sourceIPAddress": "157.254.20.101",
    "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
    "requestParameters": {
        "ModifyVolumeRequest": {
            "VolumeId": "vol-0723ec0da5de311ed",
            "VolumeType": "gp3",
            "Size": 100,
            "Throughput": 125,
            "Iops": 4000
        }
    },
    "responseElements": {
        "ModifyVolumeResponse": {
            "xmlns": "http://ec2.amazonaws.com/doc/2016-11-15/",
            "volumeModification": {
                "targetIops": 4000,
                "originalMultiAttachEnabled": false,
                "targetThroughput": 125,
                "originalThroughput": 125,
                "originalIops": 3000,
                "modificationState": "modifying",
                "targetSize": 100,
                "targetVolumeType": "gp3",
                "volumeId": "vol-0723ec0da5de311ed",
                "progress": 0,
                "startTime": "2024-05-16T02:48:28.000Z",
                "originalSize": 100,
                "targetMultiAttachEnabled": false,
                "originalVolumeType": "gp3"
            },
            "requestId": "58f9422d-dbe0-4dd1-9a5d-a14e3fb830f0"
        }
    },
    "requestID": "58f9422d-dbe0-4dd1-9a5d-a14e3fb830f0",
    "eventID": "a65b2032-9773-4b74-bc9f-db70e03b65f6",
    "readOnly": false,
    "eventType": "AwsApiCall",
    "managementEvent": true,
    "recipientAccountId": "405435454034",
    "eventCategory": "Management",
    "tlsDetails": {
        "tlsVersion": "TLSv1.3",
        "cipherSuite": "TLS_AES_128_GCM_SHA256",
        "clientProvidedHostHeader": "ec2.ap-southeast-1.amazonaws.com"
    },
    "sessionCredentialFromConsole": "true"
}

###############################################################################################

https://docs.aws.amazon.com/zh_cn/eventbridge/latest/userguide/eb-events-structure.html

您好，

我是 AWS 技术支持工程师 Harry，很高兴能协助您。

您想要了解如何在不透过CloudWatch日志和Cloudtrail，显示出event中detail的值。

经过我的测试我在return中，透过以下方式，是可以直接在主控台测试中印出detail的值的，此外也请注意，我在测试事件中的事件json是透过eventbridge获得detail-type": "AWS API Call via CloudTrail事件json内容。

return {
	'statusCode': 200,
	'body': json.dumps(str(detail))
}


#############################################################

import json

def lambda_handler(event, context):
    # TODO implement
    detail = event.get('detail', {})
    return {
	        'statusCode': 200,
	        'body': json.dumps(str(detail))
    }

#############################################################
Test Event Name
test

Response
{
  "statusCode": 200,
  "body": "\"{'eventVersion': '1.09', 'userIdentity': {'type': 'IAMUser', 'principalId': 'AIDATYVLFUPAJ3FPDFXGA', 'arn': 'arn:aws:iam::259130762176:user/Key_Diao', 'accountId': '259130762176', 'accessKeyId': 'ASIATYVLFUPACXS5VNPK', 'userName': 'Key_Diao', 'sessionContext': {'attributes': {'creationDate': '2024-05-17T03:11:28Z', 'mfaAuthenticated': 'false'}}}, 'eventTime': '2024-05-17T03:34:15Z', 'eventSource': 'ec2.amazonaws.com', 'eventName': 'ModifyVolume', 'awsRegion': 'ap-southeast-1', 'sourceIPAddress': '222.71.237.18', 'userAgent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.289 Safari/537.36', 'requestParameters': {'ModifyVolumeRequest': {'VolumeId': 'vol-0cc257cc0e7ccd6d3', 'VolumeType': 'gp2', 'Size': 1}}, 'responseElements': {'ModifyVolumeResponse': {'xmlns': 'http://ec2.amazonaws.com/doc/2016-11-15/', 'volumeModification': {'targetIops': 100, 'originalMultiAttachEnabled': False, 'originalThroughput': 125, 'originalIops': 3000, 'modificationState': 'modifying', 'targetSize': 1, 'targetVolumeType': 'gp2', 'volumeId': 'vol-0cc257cc0e7ccd6d3', 'progress': 0, 'startTime': '2024-05-17T03:34:15.000Z', 'originalSize': 1, 'targetMultiAttachEnabled': False, 'originalVolumeType': 'gp3'}, 'requestId': '1d8307d9-5c08-4ddc-9bfd-fd5ed66344c0'}}, 'requestID': '1d8307d9-5c08-4ddc-9bfd-fd5ed66344c0', 'eventID': '282ded77-8069-405b-b91e-339dd43d8f6b', 'readOnly': False, 'eventType': 'AwsApiCall', 'managementEvent': True, 'recipientAccountId': '259130762176', 'eventCategory': 'Management', 'tlsDetails': {'tlsVersion': 'TLSv1.3', 'cipherSuite': 'TLS_AES_128_GCM_SHA256', 'clientProvidedHostHeader': 'ec2.ap-southeast-1.amazonaws.com'}, 'sessionCredentialFromConsole': 'true'}\""
}
