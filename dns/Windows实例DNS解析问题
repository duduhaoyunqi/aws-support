issue:
2024-03-27T05:41:34Z E! cloudwatch: code: RequestError, message: send request failed, original error: Post "https://monitoring.ap-southeast-1.amazonaws.com/ ": dial tcp: lookup monitoring.ap-southeast-1.amazonaws.com: no such host
######################################################################
您好，

感谢您联系AWS技术支持团队，我是工程师Mingkai,很荣幸能协助您解决相关问题。

今天会议中与您沟通了如下问题:
--您在 i-00c1757651ed82df9 CloudWatch agent 的日志中看到“2024-03-27T05:41:34Z E! cloudwatch: code: RequestError, message: send request failed, original error: Post "https://monitoring.ap-southeast-1.amazonaws.com/ ": dial tcp: lookup monitoring.ap-southeast-1.amazonaws.com: no such host” 这样的报错信息。显示DNS解析异常
--检查Cloudwatch agent 配置文件，可以看到在log选项下，您有配置 endpoint_override 字段，选择将日志发送到VPC 终端节点 (vpce-0ffd85094d9ab1187-uws94785.logs.ap-southeast-1.vpce.amazonaws.com) credentials 使用的是以7*******4305结尾的账号。
--同时我们检查了位于同一个VPC 和子网下的EC2 i-0870dc3053e3958e1 的配置，使用同样的权限将日志发送到同样的VPC终端节点，其可以正常工作。
--经过以上我们可以排除CLoudWatch Agent 和VPC 终端节点的配置问题。

--同时我们分别使用两台EC2测试了DNS解析和网络路径的连通性：
 i-00c1757651ed82df9 使用 DNS resolver 10.133.13.224 无法拿到response，但是使用telnet可以连接VPC终端节点的IP地址。由于这是内网环境，所以切换到公共DNS resolver 8.8.8.8 同样无法正常解析。
 i-0870dc3053e3958e1 使用DNS resolver 10.133.13.224 可以正常拿到response，可以正常连接VPC终端节点。

#############################################################################################

您好！

为了能够进一步地了解问题的起因，这里要麻烦您提供以下信息。

i-0870dc3053e3958e1 (没问题的实例）请提供以下指令的输出。
nslookup monitoring.ap-southeast-1.amazonaws.com 10.113.13.224
nslookup monitoring.ap-southeast-1.amazonaws.com 10.113.13.82
nslookup monitoring.ap-southeast-1.amazonaws.com 10.133.32.2
ipconfig /all

i-00c1757651ed82df9 (有问题的实例）请提供以下指令的输出。
nslookup monitoring.ap-southeast-1.amazonaws.com 10.133.40.2
nslookup monitoring.ap-southeast-1.amazonaws.com 8.8.8.8
nslookup alpha.lftltd.net
nslookup amazon.com
tnc 10.113.13.224 -port 53
tnc 10.133.40.2 -port 53
tnc 8.8.8.8 -port 53

####################################################################################

客户您好,

感谢您刚才在Chime远程会议的讨论。

底下整理我们的讨论给您参考：

1. 您 CloudWatch Agent 的配置档分成 metrics 和 logs 两部分。
    metrics 的部分用的是默认的 monitoring.ap-southeast-1.amazonaws.com 这个 endpoint
    logs 的部分使用的是 override 的 vpce-0ffd85094d9ab1187-uws94785-ap-southeast-1b.logs.ap-southeast-1.vpce.amazonaws.com 这个 endpoint

2. 您的 EC2 服务器有加域，DNS 用的是域控的 IP
    使用 nslookup 工具解析上面两个 endpoint：

    域控 返回
      monitoring.ap-southeast-1.amazonaws.com --> public IP 地址
      vpce-0ffd85094d9ab1187-uws94785-ap-southeast-1b.logs.ap-southeast-1.vpce.amazonaws.com  -->  10.133.13.249

    VPC默认的DNS (10.133.32.2) 返回
      monitoring.ap-southeast-1.amazonaws.com --> private IP 地址
      vpce-0ffd85094d9ab1187-uws94785-ap-southeast-1b.logs.ap-southeast-1.vpce.amazonaws.com  -->  10.133.13.249

    这是因为您在 vpc-077c009402a41c5da 有创建 monitoring 的 VPC Endpoint 的缘故。

3. 若是还在有遇到 DNS 解析失败的情况，您可以先在 hosts 手动添加上 IP 解析的记录。

以上的信息提供给您参考。

#############################################################################################333

#file_amazon-cloudwatch-agent-windows-coreapp-prod配置文件
{
	"metrics": {
		"aggregation_dimensions": [
			[
				"InstanceId"
			]
		],
		"append_dimensions": {
			"ImageId": "${aws:ImageId}",
			"InstanceId": "${aws:InstanceId}",
			"InstanceType": "${aws:InstanceType}"
		},
		"metrics_collected": {
			"Processor": {
				"measurement": [
					"% Interrupt Time",
					"% Processor Time"
				],
				"metrics_collection_interval": 60,
				"resources": [
					"*"
				]
			},
			"Memory": {
				"measurement": [
					"% Committed Bytes In Use",
					"% Committed Bytes",
					"% Paging File Usage"
				],
				"metrics_collection_interval": 60
			},
			"LogicalDisk": {
				"measurement": [
					"% Free Space"
				],
				"metrics_collection_interval": 60,
				"resources": [
					"*"
				]
			},
			"PhysicalDisk": {
				"measurement": [
					"Avg. Disk sec/Transfer",
					"Disk Transfers/sec"
				],
				"metrics_collection_interval": 60,
				"resources": [
					"*"
				]
			},
			"Network Interface": {
				"measurement": [
					"Bytes Received/sec",
					"Bytes Sent/sec"
				],
				"metrics_collection_interval": 60,
				"resources": [
					"*"
				]
			}
		}
	},
	"logs": {
		"logs_collected": {
			"windows_events": {
				"collect_list": [
					{
						"event_name": "System",
						"event_levels": [
							"INFORMATION",
							"WARNING",
							"ERROR",
							"CRITICAL"
						],
						"log_group_name": "AWS-CoreApp-Prod-Windows",
						"log_stream_name": "{local_hostname}"
					}
				]
			}
		},
		"log_stream_name": "{local_hostname}",
		"endpoint_override": "vpce-0ffd85094d9ab1187-uws94785.logs.ap-southeast-1.vpce.amazonaws.com",
		"credentials": {
			"role_arn": "arn:aws:iam::707935184305:role/CrossAccountLogsRole"
		}
	}
}

####################################################################################

您好，

1. 烦请您打开事件查看器（eventvwr），然后将其中的“Windows logs”中的System ， Security和Application这三个日志保存并发送给我们
2. 烦请您将在powershell中执行systeminfo的结果发送给我们。

####################################################################################

PS C:\Windows\system32> systeminfo

Host Name:                 WVWSPSETHDMPD01
OS Name:                   Microsoft Windows Server 2016 Standard
OS Version:                10.0.14393 N/A Build 14393
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Member Server
OS Build Type:             Multiprocessor Free
Registered Owner:          ITS
Registered Organization:   Li & Fung (Trading) Ltd.
Product ID:                00377-60000-00000-AA309
Original Install Date:     11/27/2019, 4:28:50 PM
System Boot Time:          2/18/2024, 10:31:22 PM
System Manufacturer:       Amazon EC2
System Model:              c5.xlarge
System Type:               x64-based PC
Processor(s):              1 Processor(s) Installed.
                           [01]: Intel64 Family 6 Model 85 Stepping 4 GenuineIntel ~3000 Mhz
BIOS Version:              Amazon EC2 1.0, 10/16/2017
Windows Directory:         C:\Windows
System Directory:          C:\Windows\system32
Boot Device:               \Device\HarddiskVolume1
System Locale:             en-us;English (United States)
Input Locale:              en-us;English (United States)
Time Zone:                 (UTC+07:00) Bangkok, Hanoi, Jakarta
Total Physical Memory:     7,836 MB
Available Physical Memory: 1,671 MB
Virtual Memory: Max Size:  12,236 MB
Virtual Memory: Available: 5,404 MB
Virtual Memory: In Use:    6,832 MB
Page File Location(s):     C:\pagefile.sys
Domain:                    alpha.lftltd.net
Logon Server:              \\WVWSPSETHDMPD01
Hotfix(s):                 24 Hotfix(s) Installed.
                           [01]: KB5031989
                           [02]: KB3199986

############################################################################################

您好，非常感谢您联系我们

我们分析了您的上传的最新日志，综合案例170865919101440案例开启的时间，我们将问题影响的范围确定在了2024-2-23 03：33 UTC+0 之前和之后的24小时。
结果发现这样一些日志信息：
2/23/2024 3:30:11 AM
A request to allocate an ephemeral port number from the global UDP port space has failed due to all such ports being in use.
”从全局UDP端口空间分配临时端口号的请求失败，因为所有此类端口都在使用中。“
如果本地端口耗尽（包括TCP和UDP），那么确实会出现无法正常进行内外访问的情况。系统的报错中也确实出现了诸如丢失与域控的连接。组策略连接丢失这样的报错信息。（https://learn.microsoft.com/en-us/troubleshoot/windows-client/networking/tcp-ip-port-exhaustion-troubleshooting）  对于Windows来说，通常TCP的连接数和UDP的连接数是分开单独管理的。 我们在报错中看到的也是UDP的耗尽信息，所以我们先来进行UDP这部分的排查。

一般来说，在进行DNS解析时，会自动分配一个本地的UDP端口来尝试联系目标DNS Server的 UDP53端口。 那么我们接下来就看看究竟是那个服务需要占用如此多的本地UDP端口号。
（不过，有一点让我同样在意的是，似乎这个问题并没有固定在2月23日，之前的很多时间也出现过类似的情况。 ）
1.您可以在powershell中执行netstat -ano -p udp 看看当前活动的UDP连接。
2.请注意查看PID，这代表了进程的ID，您可以找到最频繁出现的PID（这里以PID 1536举例）
例如 Get-Process -Id 1536
如果结果是svchost的话，那么您可以执行如下命令来获取背后真正的进程名：
tasklist /svc /fi "PID eq 1536"
3.如果方便的话，烦请您提供一下powershell下执行get-process 的结果。
4.对于域控来说，通常其DNS也是支持TCP协议进行解析的，所以在测试UDP的同时，我们也希望您可以测试一下TCP 53端口的连通性。
Test-NetConnection 10.133.32.2（您的域控DNS） -port 53
